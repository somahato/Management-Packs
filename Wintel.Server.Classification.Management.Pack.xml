<?xml version="1.0" encoding="utf-8"?><ManagementPack ContentReadable="true" SchemaVersion="2.0" OriginalSchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <Manifest>
    <Identity>
      <ID>Wintel.Server.Classification.Management.Pack</ID>
      <Version>1.0.0.0</Version>
    </Identity>
    <Name>Wintel Server Classification Management Pack</Name>
    <References>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="MSIL">
        <ID>Microsoft.SystemCenter.InstanceGroup.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="SC">
        <ID>Microsoft.SystemCenter.Library</ID>
        <Version>7.0.8437.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>7.0.8437.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="Wintel.Server.Group" Accessibility="Public" Abstract="false" Base="System!System.Group" Hosted="false" Singleton="true" Extension="false" />
      </ClassTypes>
      <RelationshipTypes>
        <RelationshipType ID="Wintel.Server.Group.Contains.Windows.Computer" Accessibility="Internal" Abstract="false" Base="System!System.Containment">
          <Source ID="Wintel.Server.Group.Rel.Source" MinCardinality="0" MaxCardinality="2147483647" Type="Wintel.Server.Group" />
          <Target ID="Wintel.Server.Group.Rel.Target" MinCardinality="0" MaxCardinality="2147483647" Type="Windows!Microsoft.Windows.Computer" />
        </RelationshipType>
      </RelationshipTypes>
    </EntityTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="Wintel.Server.Group.DiscoveryRule" Enabled="true" Target="SC!Microsoft.SystemCenter.RootManagementServer" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Wintel.Server.Group" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedPowerShell.DiscoveryProvider">
          <IntervalSeconds>86400</IntervalSeconds>
          <SyncTime />
          <ScriptName>Gold_GroupDiscovery_check.ps1</ScriptName>
          <ScriptBody>
          
            # Gold_GroupDiscovery_check.ps1
            # Written by Sourav Mahato. All rights reserved.
            
            param($SourceID, $ManagedEntityID)
            
            $scomapi  = new-object -comObject "MOM.ScriptAPI"
            $DiscData = $scomapi.CreateDiscoveryData(0, $SourceID, $ManagedEntityID)  
            
            $scomapi.LogScriptEvent("Gold_GroupDiscovery_check.ps1",101,2, "Discovery was executed")
            
            $groupInstance = $DiscData.CreateClassInstance("$MPElement[Name='Wintel.Server.Group']$")
            
            $groupmembers  = Get-content "C:\Temp\Wintel.txt"

            foreach($member in $groupmembers) {
                $DNSHostName    = "$member"
                $scomapi.LogScriptEvent("Gold_GroupDiscovery_check.ps1",101,2, "Instance $DNSHostName")
                
                $serverInstance = $DiscData.CreateClassInstance("$MPElement[Name='Windows!Microsoft.Windows.Computer']$")
	              $serverInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $DNSHostName) 
                
                $RelationshipInstance = $DiscData.CreateRelationshipInstance("$MPElement[Name='Wintel.Server.Group.Contains.Windows.Computer']$")
	              $RelationshipInstance.Source = $groupInstance
	              $RelationshipInstance.Target = $serverInstance
	              
                $DiscData.AddInstance($RelationshipInstance)               
            } 
            $discData
         
        </ScriptBody>
          <Parameters>
            <Parameter>
              <Name>sourceId</Name>
              <Value>$MPElement$</Value>
            </Parameter>
            <Parameter>
              <Name>managedEntityId</Name>
              <Value>$Target/Id$</Value>
            </Parameter>
          </Parameters>
          <TimeoutSeconds>600</TimeoutSeconds>
          <StrictErrorHandling>true</StrictErrorHandling>
        </DataSource>
      </Discovery>
    </Discoveries>
  </Monitoring>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="false">
      <DisplayStrings>
        <DisplayString ElementID="Wintel.Server.Group">
          <Name>Wintel Server Group Contains Windows Computer</Name>
        </DisplayString>
        <DisplayString ElementID="Wintel.Server.Group.Contains.Windows.Computer">
          <Name>Wintel Server Group Contains Windows Computer</Name>
        </DisplayString>
        <DisplayString ElementID="Wintel.Server.Group.DiscoveryRule">
          <Name>Wintel.Server.Group.DiscoveryRule</Name>
          <Description />
        </DisplayString>
      </DisplayStrings>
    </LanguagePack>
  </LanguagePacks>
</ManagementPack>